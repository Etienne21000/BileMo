security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        users_in_memory: { memory: null }
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
              class: App\Entity\User
              property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: api_login
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
        api:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
#            json_login:
#                check_path: api_login
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
#        main:
#            lazy: true
#            provider: app_user_provider
#            json_login:
#                check_path: api_login
#            guard:
#                authenticators:
#                    - App\Security\TokenAuthenticator
#            logout:
#                path: api_logout
                # where to redirect after logout
                # target: app_any_route
        # activate different ways to authenticate
        # https://symfony.com/doc/current/security.html#firewalls-authentication

        # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles: ROLE_USER }
        - { path: ^/api/users, roles: ROLE_SUPERADMIN }
    role_hierarchy:
            ROLE_USER: ROLE_USER
            ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER]
            ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_SUPERADMIN]
    password_hashers:
        # use your user class name here
        App\Entity\User:
            # Use native password hasher, which auto-selects the best
            # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
            algorithm: auto